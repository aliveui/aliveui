{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "apple-button",
  "type": "registry:component",
  "title": "Apple Button",
  "description": "A button styled after Apple's Human Interface Guidelines with smooth animations.",
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "path": "registry/apple-button/apple-button.tsx",
      "content": "\"use client\";\n\nimport React, { useState } from \"react\";\nimport { Button, ButtonProps } from \"@/components/ui/button\";\nimport { cn } from \"@/lib/utils\";\nimport { Loader2 } from \"lucide-react\";\n\nexport interface AppleButtonProps extends ButtonProps {\n  isLoading?: boolean;\n  appleStyle?: \"macOS\" | \"iOS\" | \"iPadOS\";\n  haptic?: boolean;\n}\n\nconst AppleButton = React.forwardRef<HTMLButtonElement, AppleButtonProps>(\n  (\n    {\n      className,\n      children,\n      variant = \"default\",\n      size = \"default\",\n      isLoading = false,\n      appleStyle = \"macOS\",\n      haptic = true,\n      disabled,\n      onClick,\n      ...props\n    },\n    ref\n  ) => {\n    const [isPressed, setIsPressed] = useState(false);\n\n    const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n      if (haptic && !disabled && window.navigator.vibrate) {\n        window.navigator.vibrate(10); // Subtle haptic feedback\n      }\n\n      if (onClick) {\n        onClick(e);\n      }\n    };\n\n    // Determine correct border radius based on Apple style\n    const borderRadiusClass =\n      appleStyle === \"iOS\" || appleStyle === \"iPadOS\"\n        ? \"rounded-lg\"\n        : \"rounded-md\";\n\n    return (\n      <Button\n        className={cn(\n          // Base apple-like styling\n          \"relative font-medium overflow-hidden transition-all duration-200 ease-out\",\n          // Apply correct border-radius for different Apple styles\n          borderRadiusClass,\n          // Default variant\n          variant === \"default\" && [\n            \"bg-gradient-to-b from-[#0A84FF]/95 to-[#0A84FF] text-white shadow-sm\",\n            appleStyle === \"macOS\" && \"border border-[#0A84FF]/20\",\n            !disabled && \"hover:from-[#0A84FF]/90 hover:to-[#0075E6]\",\n          ],\n          // Secondary variant\n          variant === \"secondary\" && [\n            appleStyle === \"macOS\"\n              ? \"bg-gradient-to-b from-[#F5F5F7] to-[#E1E1E5] text-[#0A84FF] border border-[#D1D1D6]\"\n              : \"bg-[#F5F5F7] text-[#0A84FF] border border-[#D1D1D6]\",\n          ],\n          // Destructive variant\n          variant === \"destructive\" && [\n            \"bg-gradient-to-b from-[#FF453A]/95 to-[#FF453A] text-white\",\n            appleStyle === \"macOS\" && \"border border-[#FF453A]/20\",\n            !disabled && \"hover:from-[#FF453A]/90 hover:to-[#E43A30]\",\n          ],\n          // Ghost variant\n          variant === \"ghost\" && [\n            \"bg-transparent text-[#0A84FF]\",\n            !disabled && \"hover:bg-[#F5F5F7]/60\",\n          ],\n          // Outline variant\n          variant === \"outline\" && [\n            \"bg-transparent border border-[#8E8E93] text-[#8E8E93]\",\n            !disabled && \"hover:bg-[#F5F5F7]/60 hover:border-[#636366]\",\n          ],\n          // Link variant\n          variant === \"link\" && [\n            \"bg-transparent underline-offset-4 text-[#0A84FF] hover:bg-transparent\",\n            !disabled && \"hover:underline\",\n          ],\n          // Size variants that match Apple's specs more closely\n          size === \"default\" && \"h-10 px-5 py-2\",\n          size === \"sm\" && \"h-8 px-4 py-1 text-sm\",\n          size === \"lg\" && \"h-12 px-8 py-3 text-lg\",\n          // Apply Apple-specific interaction effects\n          !disabled &&\n            !isLoading && [\n              // Subtle shine/reflection effect on top\n              \"before:absolute before:inset-x-0 before:top-0 before:h-[45%] before:bg-gradient-to-b before:from-white/10 before:to-transparent\",\n              // Improved press effects with subtle shadow changes\n              \"active:scale-[0.98] active:shadow-inner active:brightness-90\",\n              isPressed && \"scale-[0.98] shadow-inner brightness-90\",\n              \"hover:brightness-[1.03]\",\n            ],\n          // Improved focus styling\n          \"focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[#0A84FF]/50 focus-visible:ring-offset-1\",\n          // Disabled state styling\n          disabled && \"opacity-50 cursor-not-allowed\",\n          // Better gradient animation\n          \"transition-[transform,box-shadow,background,opacity] will-change-transform\",\n          // Pass along any custom classes\n          className\n        )}\n        variant={variant}\n        size={size}\n        ref={ref}\n        disabled={disabled || isLoading}\n        onClick={handleClick}\n        onMouseDown={() => setIsPressed(true)}\n        onMouseUp={() => setIsPressed(false)}\n        onMouseLeave={() => setIsPressed(false)}\n        {...props}\n      >\n        {isLoading ? (\n          <>\n            <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n            <span>{children}</span>\n          </>\n        ) : (\n          <>\n            {children}\n            {/* Apply subtle highlight for pressed state */}\n            <span\n              className={cn(\n                \"absolute inset-0 opacity-0 bg-gradient-to-t from-black/5 to-transparent transition-opacity\",\n                isPressed && \"opacity-100\"\n              )}\n            />\n          </>\n        )}\n      </Button>\n    );\n  }\n);\nAppleButton.displayName = \"AppleButton\";\n\nexport { AppleButton };\n",
      "type": "registry:component"
    }
  ]
}